#!/bin/sh

#set -x

dir=$HOME/.config/acme-lsp

[ ! -d "$dir" ] && mkdir -p "$dir"

if [ $# -lt 1 ]; then
	echo "$0 [command]"
	exit 2
fi
cmd=$1
shift 1

[ -z "$(pgrep acmefocused)" ] && { echo "acmefocused not started"; exit 1; }

[ -z "$winid" ] && winid=`dial unix!$(namespace)/acmefocused`

path=`9p read acme/$winid/tag | cut -d' ' -f1`
if [ "$cmd" = "start" -a ! -z "$1" ]; then
	path="$1"
fi

name=c
if [ -d $path ]; then
	[ -f $path/Cargo.toml ] && name=r
	[ -f $path/go.mod ] && name=g
elif [ -f $path ]; then
	ext=${path##*\.}
	[ $ext = "go" ] && name=g
	[ $ext = "rs" ] && name=r
fi
proxy_addr="`namespace`/acme-lsp-$name.rpc"

case $cmd in
	start)
		root=`pwd`
		[ ! -z $1 ] && root=`realpath $1`
		case $name in
			c)
				cfg="$dir/c_config.toml"
				cat <<-EOF > "$cfg"
					[Servers]
					[Servers.clangd]
					Command = ["clangd", "--log=error"]
					[[FilenameHandlers]]
					Pattern = '\.(c|cpp|cc|h)$'
					ServerKey = "clangd"
				EOF
				ACME_LSP_CONFIG="$cfg" acme-lsp -proxy.addr $proxy_addr -rootdir $root -workspaces $root
				;;
			r)
				cfg="$dir/rust_config.toml"
				cat <<-EOF > "$cfg"
					FormatOnPut = true
					[Servers]
					[Servers.ra]
					Command = ["rust-analyzer"]
					[Servers.ra.Options]
					[Servers.ra.Options.diagnostics]
					disabled = ["inactive-code"]
					[[FilenameHandlers]]
					Pattern = '\.rs$'
					ServerKey = "ra"
				EOF
				ACME_LSP_CONFIG="$cfg" acme-lsp -proxy.addr $proxy_addr -rootdir $root -workspaces $root
				;;
			g)
				cfg="$dir/go_config.toml"
				cat <<-EOF > "$cfg"
					FormatOnPut = true
					CodeActionsOnPut = ["source.organizeImports"]
					[Servers]
					[Servers.gopls]
					Command = ["gopls", "serve"]
					[[FilenameHandlers]]
					Pattern = '\.go$'
					ServerKey = "gopls"
				EOF
				ACME_LSP_CONFIG="$cfg" acme-lsp -proxy.addr $proxy_addr -rootdir $root -workspaces $root
				;;
			*)
				echo "Not supported: $name"
				;;
		 esac
		;;
	*)
		acme-dot $winid | 9p write acme/cons
		L -proxy.addr $proxy_addr $cmd $*
		;;
esac
