#!/bin/bash

set -e
#set -x

detect_kind() {
	path=$1
	kind=

	if [ -d $path ]; then
		[ -f $path/Cargo.toml ] && kind=r
		[ -f $path/go.mod ] && kind=g
		[ -f $path/pubspec.yaml ] && kind=d
		[ -f $path/build.zig ] && kind=z
		[ -f $path/mix.exs ] && kind=e
	elif [ -f $path ]; then
		ext=${path##*\.}
		[ $ext = "go" ] && kind=g
		[ $ext = "rs" ] && kind=r
		[ $ext = "dart" ] && kind=d
		[ $ext = "zig" ] && kind=z
		[ $ext = "c" -o $ext = "cpp" -o $ext = "cc" -o $ext = "h" ] && kind=c
		[ $ext = "ex" -o $ext = "exs" ] && kind=e
	fi

	echo $kind
}

detect_root() {
	kind=$1
	root=$2

	case $kind in
		c)
			while [ ! -e "$root/compile_commands.json" ] && [ "$root" != "/" ]
			do
				root=`dirname $root`
			done
			;;
		d)
			while [ ! -e "$root/pubspec.yaml" ] && [ "$root" != "/" ]
			do
				root=`dirname $root`
			done
			;;
		e)
			while [ ! -e "$root/mix.exs" ] && [ "$root" != "/" ]
			do
				root=`dirname $root`
			done
			;;
		g)
			while [ ! -e "$root/go.mod" ] && [ "$root" != "/" ]
			do
				root=`dirname $root`
			done
			;;
		r)
			while [ ! -e "$root/Cargo.toml" ] && [ "$root" != "/" ]
			do
				root=`dirname $root`
			done
			;;
		z)
			while [ ! -e "$root/build.zig" ] && [ "$root" != "/" ]
			do
				root=`dirname $root`
			done
			;;
	esac

	[ $root = "/" ] && root=
	echo $root
}

if [ $# -lt 1 ]; then
	echo "usage: $0 [command]"
	exit 2
fi
cmd=$1
shift 1

[ -z "$winid" ] && [ -z "$(pgrep acmefocused)" ] && { echo "acmefocused not started"; exit 3; }
[ -z "$winid" ] && winid=`dial unix!$(namespace)/acmefocused`
[ -z "$winid" ] && { echo "failed to get current window id"; exit 3; }

file_path=`9p read acme/$winid/tag | cut -d' ' -f1`
kind=`detect_kind "$file_path"`
[ -z "$kind" ] && { echo "failed to detect kind based on $file_path"; exit 4; }
root=`detect_root "$kind" "$file_path"`
[ -z "$root" ] && { echo "failed to detect root based on $kind $file_path"; exit 5; }

session=`echo -n "$root"/+LSP | 9 tr .@ _`
if tmux has -t "$session" 2>/dev/null; then
	[[ `tmux lsp -t "$session:1" -F '#{pane_dead}'` = 1 ]] && tmux respawnp -t "$session:1"
else
	case $kind in
		c)
			tmux new -d -s "$session" -c "$root" lsp clangd --log=error
			;;
		r)
			tmux new -d -s "$session" -c "$root" lsp rust-analyzer
			;;
		g)
			tmux new -d -s "$session" -c "$root" lsp gopls serve
			;;
		d)
			tmux new -d -s "$session" -c "$root" lsp "sh", "-c", "dart $(dirname $(which dart))/snapshots/analysis_server.dart.snapshot --lsp"
			;;
		z)
			tmux new -d -s "$session" -c "$root" lsp /home/tw/code/zls/zig-out/bin/zls
			;;
		e)
			tmux new -d -s "$session" -c "$root" lsp /home/tw/code/elixir-ls/output/language_server.sh
			;;
		*)
			echo "Not supported: $kind"
			exit 1
			;;
	esac
	tmux set -p -t "$session:1"  remain-on-exit on
fi

case $cmd in
	def)
		tmux pipep -t $session:1 -I "echo def ""$file_path"" `acme-dot -l $winid`"
		;;
	refs)
		tmux pipep -t $session:1 -I "echo ref ""$file_path"" `acme-dot -l $winid`"
		;;
	restart)
		tmux respawnp -k -t "$session:1"
		;;
	impls)
		tmux pipep -t $session:1 -I "echo imp ""$file_path"" `acme-dot -l $winid`"
		;;
	*)
		echo "$cmd not supported"
		;;
esac